浅拷贝 = 只拷贝第一层
    对象=对象.copy()
深拷贝 = 克隆一份
    import  copy
    对象=copy.deepcopy(拷贝对象)

集合（去重，关系测试）：
        无序不重复，有可变和可不变，不可哈希
        set             可变集合
        frozenset       不可变集合
        判断元素是不是在集合里面用in

        #创建集合
        s = set(['a','b','c','a','d','d'])
        s1 = list(s)
        print(s1)

        #判断是不是在集合里面
        print('a' in s)

        #对集合进行更新

        #1、将元素增加到集合中(只能添加一个元素)
        s.add('u')
        print(s)

        #2、添加内容(可以添加序列)
        s.update([12,'dwadwadw'])
        print(s)

        #3、删除元素
        #1、删除指定元素
        s.remove('a')
        print(s)

        #2、随机删除元素
        s.pop()
        print(s)

        #3、清空集合，删除集合里面的元素
        s.clear()
        print(s)

        #4、删除集合，是删除整个集合
        del s

and:取全部的元素，公共的不要，相当于数学中的（交集）
    python交集的表达形式intersection
or:取相同元素，不公共的元素不要，相当于数学中的（并集）
    python并集的表达形式union

差集(-)

    1、集合.difference(集合)         表示的是b的差集，就是b缺少的元素

    2、集合b.difference(集合a))          表示的是a的差集，就是a缺少的元素

对称差集
    集合.symmetric_difference(集合))    对称差集，反向交集，就是去掉两个集合共有的元素，取两个都没有的元素

#超集，父集
    集合.issuperset(集合)

#子集
    集合.issubset(集合)


函数：是将一组语句集合通过一个名字(函数名)封装起来，要执行这个函数，只需要用其函数名即可
    特性：
        1、代码重用
        2、保持一致性
        3、可扩展性
    函数创建：
        def 函数名(参数列表)：
            执行语句
    函数调用：
        函数名()
    函数命名规则：
           1、函数名必须以下划线字母开头，可以包含任意字母，数字或下划线的组合，不能使用任何标点符号
           2、函数名是区分大小写的
           3、函数不能是保留字(python自已用的函数)

或者当前时间
    import  time
    time_front ='%Y-%m-%d %X'
    time_curront =time.strftime(time_front)
    print(time_curront)

函数参数：
    1、函数必须参数(输入的顺序必须和函数调用相同)

    2、函数关键字参数(按照关键字查询)

    3、函数的默认参数(函数某个参数已经赋值了，默认参数放后面)

     不定长参数：
            1、不定长参数定义(*参数)
            2、不定长参数定义(**参数（带键值对）)
            (*参数)只能接收没有键值对的
            (**参数)接收键值对的参数
            (*参数,**参数)第一个接收没有键值对的，第二个是接收有键值对的

     结论：关于不定长参数的位置(*args放在左边，*kwargs放在右边，默认值放在第一个)

参数优先级：关键字，默认参数，不定长参数

函数的返回值(return)：







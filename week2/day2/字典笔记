不可变类型：
        整型
        字符串
        元组
可变类型：
        列表
        字典
字典
    字典是Python中唯一的映射类型，采用键值对的形式存储,是对哈希函数的计算
        特点：
            1、字典是无序存储的
            2、字典是通过键值对来获取值的(键的键值一定是不可变类型),键唯一
        创建字典可以通过两个方法：
            1、字典名={'键值':'键值的值','键值':'键值的值'}
            2、通过工厂函数
                *字典名=dict((('键值','键值的值'),))
                字典名=dict((['键值','键值的值'],))
                字典名=dict([['键值','键值的值']])
        字典的增加：
                字典名['键值']=键值的值
                返回值=字典名.setdefault('键值','键值的值')
                返回值=键值的值
                如果增加的建和键值对再程序中有，则不添加，反之则添加要添加键值和键值对
        字典的查询：
                通过键值的方法经行查找：字典名={'键值'}
                通过.keys()获取字典的键值：list(字典名.keys())转换成列表输出
                通过.values()获取字典的的键值的值：list(字典名.values())转换成列表输出
                通过.items()获取字典的全部数据：list(字典名.items())装换成列表输出
        字典的修改：
              通过键的方法修改字典中的键值的值：字典名['键值']=键值的值
              通过.update修改字典：字典名.update(另外一个字典名) *注意：当调用的字典中有第二个字典的键值对的时候会覆盖，没有则将数据插入到调用的列表中
        字典的删除：
              del 字典名['键值']删除指定的键值对
              del 字典名删除整个字典
              字典名.clear()清空字典的所有键值对
              返回值 = 字典名.pop()删除对应的键值的键值对(有返回值，返回值为键值对的值)
              返回值 = 字典名.popitem()随机删除任意一组键值对
        字典的其它操作：
              创建字典：字典名=dict.fromkeys(['键值','键值','键值'],'键值的值')
              字典的嵌套：字典名={
                            "字典名"：{
                                "键值":"键值的值"
                            },
                            "字典名"：{
                                "键值":"键值的值"
                            },
                            "字典名"：{
                                "键值":"键值的值"
                            }
              }
              字典嵌套的修改：
                        字典名['字典名']['键值']['键值的值']=修改的值
              字典的排序：
                       sorted(字典名)根据键值的排序(数字按照从大到小(字符串按照ASCII码排序))
                       sorted(字典名.values())根据values值排序
                       sorted(字典名.keys())根据默认按照键值排序
                       sorted(字典名.items())根据默认按照按键排序
              字典的遍历：
                       1、for i in 字典名:
                                print(i,字典名[i])
                                （效力高）
                       2、for i,v in 字典名.items():
                                print(i,v)
                                  (效力低)